"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
(function () {
  "use strict";

  var e = "scroll-disabled",
    o = function o() {
      document.body.classList.contains(e) ? function () {
        var o = parseInt(document.body.dataset.position, 10);
        document.body.style.paddingRight = "0px", document.body.style.top = "auto", document.body.classList.remove(e), window.scroll({
          top: o,
          left: 0
        }), document.body.removeAttribute("data-position"), document.documentElement.style.scrollBehavior = "smooth";
      }() : function () {
        var o = window.scrollY,
          t = window.innerWidth - document.body.offsetWidth + "px";
        document.documentElement.style.scrollBehavior = "none", document.body.style.paddingRight = t, document.body.classList.add(e), document.body.dataset.position = o, document.body.style.top = "-".concat(o, "px");
      }();
    },
    t = {
      xs: 0,
      sm: 576,
      md: 768,
      lg: 992,
      xl: 1200,
      xxl: 1400
    },
    n = function n() {
      return window.innerWidth >= t.xl && window.innerWidth < t.xxl;
    },
    d = function d() {
      return window.innerWidth >= t.xxl;
    },
    l = function l() {
      var e = document.querySelector(".header__navbar"),
        t = document.querySelectorAll(".header__menu-parent > a"),
        l = document.querySelector(".header__toggler"),
        r = "header__navbar--opened",
        s = "active",
        a = "header__toggler--active",
        c = "selected",
        i = function i(t) {
          t.preventDefault(), l.classList.toggle(a), l.setAttribute("aria-expanded", "false" == l.getAttribute("aria-expanded") ? "true" : "false"), e.classList.toggle(r), o();
        },
        u = function u(e) {
          e.preventDefault(), e.target.parentNode.classList.toggle(c);
        };
      return l.addEventListener("click", i), n() || d() || t.forEach(function (e) {
        e.addEventListener("click", u), e.parentNode.classList.contains(s) && e.parentNode.classList.add(c);
      }), void window.addEventListener("resize", function () {
        t.forEach(function (e) {
          e.removeEventListener("click", u), e.parentNode.classList.remove(c);
        }), n() || d() || t.forEach(function (e) {
          return e.addEventListener("click", u);
        });
      });
    },
    r = function r(e) {
      if ("undefined" == typeof EmblaCarousel) return void console.log("EmblaCarousel was not loaded :(");
      if (!e) return void console.log("Carousel container was not found");
      var o = e.querySelector(".embla__viewport"),
        t = EmblaCarousel(o, {
          loop: !1,
          breakpoints: {
            "(min-width: 1200px)": {
              slidesToScroll: 2
            }
          }
        });
      if ("false" !== e.dataset.arrows) {
        var _ref = function (e) {
            var o = function o(e) {
                var o = document.createElement("button");
                return o.className = "btn btn-primary embla__control embla__control-" + (e ? "prev" : "next"), o.setAttribute("aria-label", e ? "Предыдущий элемент" : "Следующий элемент"), o.type = "button", o.innerHTML = "<i class=\"fa-classic fa-solid fa-arrow-".concat(e ? "left" : "right", "\"></i>"), o;
              },
              t = o(!0),
              n = o(!1);
            return e.prepend(t, n), {
              prevBtnNode: t,
              nextBtnNode: n
            };
          }(e),
          _o = _ref.prevBtnNode,
          _n = _ref.nextBtnNode,
          _d = function (e, o, t) {
            var n = function n() {
                e.scrollPrev();
              },
              d = function d() {
                e.scrollNext();
              };
            o.addEventListener("click", n, !1), t.addEventListener("click", d, !1);
            var l = function (e, o, t) {
              var n = function n() {
                e.canScrollPrev() ? o.removeAttribute("disabled") : o.setAttribute("disabled", "disabled"), e.canScrollNext() ? t.removeAttribute("disabled") : t.setAttribute("disabled", "disabled");
              };
              return e.on("select", n).on("init", n).on("reInit", n), function () {
                o.removeAttribute("disabled"), t.removeAttribute("disabled");
              };
            }(e, o, t);
            return function () {
              l(), o.removeEventListener("click", n, !1), t.removeEventListener("click", d, !1);
            };
          }(t, _o, _n);
        t.on("destroy", _d);
      }
    };
  var s, a;
  s = void 0, a = function a(e) {
    var o = Object.assign(Object.assign({}, {
      PANUP: "Подвинуть наверх",
      PANDOWN: "Подвинуть вниз",
      PANLEFT: "Подвинуть влево",
      PANRIGHT: "Подвинуть вправо",
      ZOOMIN: "Увеличить",
      ZOOMOUT: "Уменьшить",
      TOGGLEZOOM: "Изменить приближение",
      TOGGLE1TO1: "Изменить приближение",
      ITERATEZOOM: "Изменить приближение",
      ROTATECCW: "Повернуть против часовой стрелки",
      ROTATECW: "Повернуть по часовой стрелке",
      FLIPX: "Отразить горизонтально",
      FLIPY: "Отразить вертикально",
      FITX: "Вписать горизонтально",
      FITY: "Вписать вертикально",
      RESET: "Сбросить",
      TOGGLEFS: "Полноэкранный режим"
    }), {
      CLOSE: "Закрыть",
      NEXT: "Следующий",
      PREV: "Предыдущий",
      MODAL: "Вы можете закрыть окно нажатием ESC",
      ERROR: "Ошибка, попробуйте повторить попытку",
      IMAGE_ERROR: "Изображение не найдено",
      ELEMENT_NOT_FOUND: "HTML элемент не найден",
      AJAX_NOT_FOUND: "Ошибка загрузки AJAX: Не найдено",
      AJAX_FORBIDDEN: "Ошибка загрузки AJAX: Запрещено",
      IFRAME_ERROR: "Ошибка при загрузке фрейма",
      TOGGLE_ZOOM: "Приблизить",
      TOGGLE_THUMBS: "Миниатюры",
      TOGGLE_SLIDESHOW: "Слайдшоу",
      TOGGLE_FULLSCREEN: "Полноэкранный режим",
      DOWNLOAD: "Загрузить"
    });
    e.ru = o;
  }, "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? a(exports) : "function" == typeof define && define.amd ? define(["exports"], a) : a(((s = "undefined" != typeof globalThis ? globalThis : s || self).Fancybox = s.Fancybox || {}, s.Fancybox.l10n = s.Fancybox.l10n || {})), l(), "undefined" != typeof Fancybox && Fancybox.bind("[data-fancybox]", {
    l10n: Fancybox.l10n.ru
  });
  document.querySelectorAll(".embla").forEach(function (e) {
    return r(e);
  });
  var c = document.querySelectorAll("img"),
    i = document.querySelectorAll("video");
  var u = 0;
  i.forEach(function (e) {
    e.complete ? console.log("Image ".concat(e.src, " downloaded succefully")) : (e.log("Downloading ".concat(e.src)), e.addEventListener("load", function () {
      console.log("Downloading ".concat(e.src, " finished"));
    }), e.addEventListener("error", function () {
      console.error("Video ".concat(e.src, " was NOT downloaded"));
    }));
  }), c.forEach(function (e) {
    e.complete ? (u++, console.log("Image ".concat(e.src, " downloaded succefully"))) : (console.log("Downloading ".concat(e.src)), e.addEventListener("load", function () {
      u++, console.log("Downloading ".concat(e.src, " finished")), u === c.length && console.log("All images loaded!");
    }), e.addEventListener("error", function () {
      console.error("Image ".concat(e.src, " was NOT downloaded"));
    }));
  }), u === c.length && console.log("All images were already loaded on page load.");
})();